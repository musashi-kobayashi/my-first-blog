ポスト内容を保存する為の Post モデルは、 models.py に定義しました。ポストの一覧を表示する post_list は views.py にあり、そこにテンプレートも加わりました。 これらを準備しましたが、実際のところ、ポストをどうやってHTMLファイルに出力すればいいのでしょうか？ 大まかなイメージとしては、データベースに保存された記事を取り出して、テンプレートのHTMLファイルの中に行儀よく並べれば良さそうですね。

正確には、ビュー が モデルとテンプレートの橋渡しをしてくれます。 私達が作業している post_list ビュー の場合、表示したいデータを取り出して、テンプレートファイルに渡すことになります。 どのモデルのデータを、どのテンプレートに表示させるかを、 ビューに 記述します。

それでは、実際にやってみましょう。

まずblog/views.pyをエディタで開きます。今のところ post_listビュー は、以下のようになっているでしょう。

blog/views.py
from django.shortcuts import render

def post_list(request):
    return render(request, 'blog/post_list.html', {})
少し前に、別のファイルに用意したコードをどうやってインクルードするか説明したのですけれど、覚えていますか？ それでは models.py のモデルを、インクルードしてみましょう。 from .models import Post という行を追加してみます。

blog/views.py
from django.shortcuts import render
from .models import Post
models の前にあるドットは カレントディレクトリ 、もしくは カレントアプリケーション のことです。 views.pyと models.pyは、同じディレクトリに置いてあります。 だから、こんな風に.とファイル名だけを使って、簡単に記述することが出来るのです。（ファイル名の拡張子.pyは必要ないです） そして、モデルの名前を指定してインポートします(この場合のモデルは Postですね)。

さて、次にすべきことは、実際に Postモデルからブログの記事を取り出すことですが、それには クエリセットが必要です。