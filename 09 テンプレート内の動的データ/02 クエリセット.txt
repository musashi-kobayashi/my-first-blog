もう、クエリセットの働きについては、知っていますよね。Django ORM（クエリセット） チャプター で勉強しました。

公開したブログ記事を published_dateで並べ替えをしたいですね。これも、クエリセットの章でやったので、大丈夫ですね？

blog/views.py
Post.objects.filter(published_date__lte=timezone.now()).order_by('published_date')
それでは blog/views.pyをエディタで開いて、このコードをdef post_list(request)で始まる関数の中に加えましょう。from django.utils import timezoneをまず追加するのを忘れないでくださいね。

blog/views.py
from django.shortcuts import render
from django.utils import timezone
from .models import Post

def post_list(request):
    posts = Post.objects.filter(published_date__lte=timezone.now()).order_by('published_date')
    return render(request, 'blog/post_list.html', {})
最後に残っているのは、クエリセットを参照している変数postsをテンプレートに渡す作業です。テンプレートでの表示については次の章でやりましょう。

作成したクエリセットは、変数 postsで参照できることに、注意しましょう。この 変数 posts を使って、クエリセットのデータにアクセスします。これから先 posts というと、このクエリセットのことです。

render関数では、既にパラメータとして requestとテンプレートファイル 'blog/post_list.html'が渡されています。リクエストというのは、インターネットを介してユーザから受け取った全ての情報が詰まったものです。最後のパラメータに注目してください。 {}こんな風に書かれていますね。この中に指定した情報を、テンプレートが表示してくれます。{} の中に引数を記述する時は、名前と値をセットにしなくてはなりません。 表示させたいのはクエリセットのデータなので、 posts を指定しましょう。 :) {'posts': posts}という具合に、記述します。 注意して欲しいのは、シングルクォートです。 :（コロン） で区切られた、前の方の posts は、 シングルクォート で囲まれて、 'posts' になっていますよね。こちらが名前で、後ろの方の posts は値、クエリセットのことです。

最終的に blog/views.pyは、以下の様になるはずです。

blog/views.py
from django.shortcuts import render
from django.utils import timezone
from .models import Post

def post_list(request):
    posts = Post.objects.filter(published_date__lte=timezone.now()).order_by('published_date')
    return render(request, 'blog/post_list.html', {'posts': posts})
どうでしたか？次は、このクエリセットをテンプレートで表示させるところを、やってみましょう。